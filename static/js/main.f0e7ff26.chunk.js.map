{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/UserInfoCard.js","components/App.js","reducers/index.js","reducers/PostsReducer.js","reducers/UsersReducer.js","reducers/SelectedUserReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","resp","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","this","_x3","apply","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","_this","user","props","react_default","createElement","className","onClick","selectedUser","username","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","style","padding","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","google_api","process","UserInfoCard","console","log","_user$address","address","street","suite","city","zipcode","geo","_user$company","company","name","catchPhrase","bs","iframeSrc","lat","lng","deselectedUser","float","href","email","src","width","height","border","allowFullScreen","App","src_components_PostList","src_components_UserInfoCard","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.f0e7ff26.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com/'\n});","import _ from 'lodash'\nimport jsonPlaceholder from '../apis/jsonPlaceholder'\n\nexport const fetchPostsAndUsers = () => async (dispatch , getState)=> {\n    await dispatch(fetchPosts())\n\n    _.chain(getState().posts)\n        .map('userId')\n        .uniq()\n        .forEach(id => dispatch(fetchUser(id)))\n        .value()\n}\n\nexport const fetchPosts = () => async dispatch => {\n\n    const resp = await jsonPlaceholder.get('/posts')\n    \n    dispatch({\n        type: 'FETCH_POSTS',\n        payload: resp.data\n    })\n}\n\nexport const fetchUser = id => async dispatch => {\n    const resp = await jsonPlaceholder.get(`/users/${id}`)\n\n    dispatch({\n        type: 'FETCH_USER',\n        payload: resp.data\n    })\n}\n\nexport const selectedUser = user => {\n    return {\n        type: 'SELECTED_USER',\n        payload: user\n    }    \n}\n\nexport const deselectedUser = () => {\n    return {\n        type: 'DESELECTED_USER',\n        payload: null\n    }\n}\n// export const fetchUser = (id) => async dispatch => {\n//     _fetchUser(id, dispatch)\n// }\n\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//     const resp = await jsonPlaceholder.get(`/users/${id}`)\n\n//     dispatch({\n//         type: 'FETCH_USER',\n//         payload: resp.data\n//     })\n// })\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { selectedUser } from '../actions'\n\nclass UserHeader extends Component {\n\n    render() {\n        const { user } = this.props\n        \n        if (!user) {\n            return null\n        }\n        \n        return (\n            <div className=\"header\" onClick={() => this.props.selectedUser(user)}>{user.username}</div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { \n        user: state.users.find(user => user.id === ownProps.userId),\n     }\n}\nexport default connect(mapStateToProps, { selectedUser })(UserHeader);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchPostsAndUsers } from '../actions'\nimport UserHeader from './UserHeader'\nimport './PostList.css'\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPostsAndUsers()\n    }\n\n    renderList() {\n        return this.props.posts.map(post => {\n            return (\n                <div className=\"item item-details\" key={post.id} >\n                    <i className=\"large middle aligned icon user\" style={{ padding: '0 10px 0 10px'}} />\n                        <div className=\"content\">\n                            <div className=\"description\">\n                                <h2>{post.title}</h2>\n                                <p>{post.body}</p>\n                            </div>\n                            <br></br>\n                            <UserHeader userId={post.userId} />\n                        </div>\n                </div>\n            )\n        })\n    }\n    \n    render() {\n        return(\n            <div className=\"ui relaxed divided list\">\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { posts: state.posts }\n}\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { deselectedUser } from '../actions'\nimport './UserInfoCard.css'\n\nconst google_api = `${process.env.REACT_APP_GOOGLE_MAPS}`\n\nclass UserInfoCard extends Component {\n    render() {\n        const { user } = this.props\n        if (!user) {\n            return null\n        }\n\n        console.log(this.props)\n        const { street, suite, city, zipcode, geo } = user.address\n        const { name, catchPhrase, bs } = user.company\n        const iframeSrc = `https://www.google.com/maps/embed/v1/place?q=${geo.lat}%2C%20${geo.lng}&key=${google_api}`\n        \n        return(\n            <div className=\"user-info-card-container\">\n                <div>\n                    <button onClick={this.props.deselectedUser} style={{ float: 'right'}}>X</button>\n                </div>\n                <h1>{user.username}</h1>\n                <h3>aka {user.name}</h3>\n                <br></br>\n                \n                <i className=\"envelope outline icon\"></i><a href={`mailto:${user.email}`}>{user.email}</a><br></br>\n                <i className=\"map marker icon\"></i>{`${street}`}<br></br>\n                {`${suite}`}<br></br>\n                {`${city} ${zipcode}`}<br></br>\n                <h3>says they are currently located at: </h3><br></br>\n                <strong>{`${geo.lat}°, ${geo.lng}°`}</strong><br></br>\n                <iframe name=\"gMap\" src={iframeSrc} width=\"400\" height=\"250\" style={{ border: '0' }} allowFullScreen title={user.username}></iframe><br></br>\n                \n\n                <h3>works at</h3>\n                <h3>{name}</h3>\n                <p>\n                    {catchPhrase}<br></br>\n                    {bs}\n                </p>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        user: state.selectedUser\n    }\n}\n\nexport default connect(mapStateToProps, { deselectedUser })(UserInfoCard)","import React, { Component } from 'react'\nimport PostList from './PostList'\nimport UserInfoCard from './UserInfoCard'\nimport { connect } from 'react-redux'\nimport './App.css'\n\nclass App extends Component {\n    render() {\n        return(\n            <div className=\"ui container\">\n            <h1>displayBlog</h1>\n                {this.props.selectedUser === null ? <PostList /> : <UserInfoCard /> }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedUser: state.selectedUser\n    }\n}\n\nexport default connect(mapStateToProps)(App);","import { combineReducers } from 'redux'\nimport postsReducer from './PostsReducer'\nimport usersReducer from './UsersReducer'\nimport selectedUsersReducer from './SelectedUserReducer'\n\nexport default combineReducers({\n    posts: postsReducer,\n    users: usersReducer,\n    selectedUser: selectedUsersReducer\n})","export default (state = [], action) => {\n    switch(action.type) {\n        case 'FETCH_POSTS':\n            return action.payload\n        default:\n            return state\n    }\n}","export default (state = [], action) => {\n    switch(action.type) {\n        case 'FETCH_USER':\n            return [...state, action.payload]\n        default:\n            return state\n    }\n}","export default (state = null, action) => {\n    switch(action.type) {\n        case 'SELECTED_USER':\n            return action.payload\n        case 'DESELECTED_USER':\n            return null\n        default:\n            return state\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}